{"ast":null,"code":"const POST = window.POST = async (path = \"\", data = {}) => {\n  const opts = {\n    method: \"POST\",\n    cache: \"no-cache\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    redirect: \"follow\",\n    referrerPolicy: \"no-referrer\",\n    body: JSON.stringify(data)\n  };\n  if (POST.token) opts.headers[\"X-Auth-Header\"] = POST.token;\n\n  try {\n    let result = await fetch(path, opts);\n    return await result.json();\n  } catch (e) {\n    return {\n      success: false,\n      message: e.toString()\n    };\n  }\n};\n\nexport default POST;","map":{"version":3,"sources":["/home/bea/Documents/assistant/react-passport/src/lib/post.js"],"names":["POST","window","path","data","opts","method","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","token","result","fetch","json","e","success","message","toString"],"mappings":"AACA,MAAMA,IAAI,GAAGC,MAAM,CAACD,IAAP,GAAc,OAAOE,IAAI,GAAG,EAAd,EAAkBC,IAAI,GAAG,EAAzB,KAAgC;AACzD,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,KAAK,EAAE,UAFI;AAGXC,IAAAA,WAAW,EAAE,aAHF;AAIXC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAJE;AAOXC,IAAAA,QAAQ,EAAE,QAPC;AAQXC,IAAAA,cAAc,EAAE,aARL;AASXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;AATK,GAAb;AAWA,MAAKH,IAAI,CAACc,KAAV,EAAkBV,IAAI,CAACI,OAAL,CAAa,eAAb,IAAgCR,IAAI,CAACc,KAArC;;AAClB,MAAI;AACF,QAAIC,MAAM,GAAG,MAAMC,KAAK,CAACd,IAAD,EAAOE,IAAP,CAAxB;AACA,WAAO,MAAMW,MAAM,CAACE,IAAP,EAAb;AACD,GAHD,CAGE,OAAMC,CAAN,EAAQ;AACR,WAAO;AAAEC,MAAAA,OAAO,EAAC,KAAV;AAAiBC,MAAAA,OAAO,EAACF,CAAC,CAACG,QAAF;AAAzB,KAAP;AACD;AACF,CAnBD;;AAqBA,eAAerB,IAAf","sourcesContent":["\nconst POST = window.POST = async (path = \"\", data = {}) => {\n  const opts = {\n    method: \"POST\",\n    cache: \"no-cache\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    redirect: \"follow\",\n    referrerPolicy: \"no-referrer\",\n    body: JSON.stringify(data)\n  };\n  if ( POST.token ) opts.headers[\"X-Auth-Header\"] = POST.token;\n  try {\n    let result = await fetch(path, opts);\n    return await result.json();\n  } catch(e){\n    return { success:false, message:e.toString() }\n  }\n};\n\nexport default POST;\n"]},"metadata":{},"sourceType":"module"}